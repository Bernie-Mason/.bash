#!/bin/bash
#
# With .NET 5 we build our packages automatically and can just copy them from the output folder to the shared package cache
#


say() {
  echo "$@" 1>&2 # redirect stdout to stderr
}

die() {
  say "$2"
  exit "$1"
}

function echo_help() {
  echo "Copy nuget packages from shared repo to local package cache."
    echo " "
    echo "actions:"
    echo "-h, --help             show brief help"
    echo "-s, --set-config       set directory build props in both shared and Grid to ${DEFAULT_PACKAGE_VERSION}. Should use in combination with build"
    echo "-b, --build            Build the shared solution"
    die 0
}


DEFAULT_PACKAGE_VERSION=2.0.0
SET_CONFIG=false
VERSION_REGEX='[0-9]\.[0-9]\.[0-9]'
BUILD_BEFORE_PACKING=false

while test $# -gt 0; do
  case "$1" in
    -h|--help)
      echo_help
      ;;
    -s|--set-config)
      SET_CONFIG=true
      shift
      ;;
    -b|--build)
      BUILD_BEFORE_PACKING=true
      shift
      ;;
    -sb|-bs)
      SET_CONFIG=true
      BUILD_BEFORE_PACKING=true
      shift
      ;;
    *)
    shift
      continue
      ;;
  esac
done

if $SET_CONFIG; then
  # Package version must be higher than the current version for Grids dependencies. For example, Grid depends on Eyegaze which depends on shared (as of 06/04/2022 this is roughly version 2.0.40.
  # The version we choose needs to be higher than these dependencies.
  DEFAULT_PACKAGE_VERSION=5.5.5

  say "
  -- Setting Shared Directory.Build.Props Version --
  "
  SHARED_DIRECTORY_BUILD_PROPS="${shared_repository_dir}/Source/Directory.Build.props"
  sed --in-place s_"Version>${VERSION_REGEX}\+"_"Version>${DEFAULT_PACKAGE_VERSION}"_g ${SHARED_DIRECTORY_BUILD_PROPS}
  
  say "Show Shared Version now in Directory.Build.props:"
  grep -oP "Version>${VERSION_REGEX}+" "${SHARED_DIRECTORY_BUILD_PROPS}"
  
fi

if $BUILD_BEFORE_PACKING; then
  shared -b || die 1 "Build failed"
fi

say "
-- Copying packages from output directory to local package store --
"

cp -v "${shared_repository_dir}/Source/SensorySoftware.Shared/bin/Debug/SensorySoftware.Shared.${DEFAULT_PACKAGE_VERSION}.nupkg" "${local_package_store}"
cp -v "${shared_repository_dir}/Source/SensorySoftware.Symbols.MetafileReader.Desktop/bin/Debug/SensorySoftware.Symbols.MetafileReader.Desktop.${DEFAULT_PACKAGE_VERSION}.nupkg" "${local_package_store}"
cp -v "${shared_repository_dir}/Source/SensorySoftware.Shared.Desktop/bin/Debug/SensorySoftware.Shared.Desktop.${DEFAULT_PACKAGE_VERSION}.nupkg" "${local_package_store}"
cp -v "${shared_repository_dir}/Source/SensorySoftware.Shared.FluentUI/bin/Debug/SensorySoftware.Shared.FluentUI.${DEFAULT_PACKAGE_VERSION}.nupkg" "${local_package_store}"
cp -v "${shared_repository_dir}/Source/SensorySoftware.Shared.HardwareLicensingServiceClient/bin/Debug/SensorySoftware.Shared.HardwareLicensingServiceClient.${DEFAULT_PACKAGE_VERSION}.nupkg" "${local_package_store}"

say "
-- Removing cached packages from global nuget cache --
"

clear-shared-cache

if $SET_CONFIG; then
  say "
  -- Setting Grid Directory.Build.Props SharedVersion --
  "
  GRID_DIRECTORY_BUILD_PROPS="${grid_repository_dir}/Source/Directory.Build.props"
  sed --in-place s_"SharedVersion>${VERSION_REGEX}\+"_"SharedVersion>${DEFAULT_PACKAGE_VERSION}"_g ${GRID_DIRECTORY_BUILD_PROPS}
  
  
  say "Show Grid SharedVersion now in Directory.Build.props:"
  grep -oP "SharedVersion>${VERSION_REGEX}+" "${GRID_DIRECTORY_BUILD_PROPS}"
fi
