#!/bin/bash
#
# With .NET 5 we build our packages automatically and can just copy them from the output folder to the eyegaze package cache
#
# Required env variables: 
#   grid_repository_dir - absolute path to directory of the grid repository
#   eyegaze_repository_dir - absolute path to directory of the eyegaze repository
#
# Required scripts: 
#   clear-package-cache
#
# Optional scripts: 
#   eyegaze - for pre-building

say() {
  echo "$@" 1>&2 # redirect stdout to stderr
}

die() {
  say "$2"
  exit "$1"
}

function echo_help() {
  echo "Copy nuget packages from eyegaze repo to local package cache."
    echo " "
    echo "actions:"
    echo "-h, --help             show brief help"
    echo "-s, --set-config       set packags.props in EyeGaze and directory.build.props in Grid to ${SET_PACKAGE_VERSION}. Will also build"
    echo "-b, --build            Build the eyegaze solution"
    die 0
}

EYEGAZE_PACKAGES_PROPS="${eyegaze_repository_dir}/Source/packages.props"
SET_PACKAGE_VERSION=5.5.5
DEFAULT_PACKAGE_VERSION=$(grep -oP "Version>\K${VERSION_REGEX}+" "${EYEGAZE_PACKAGES_PROPS}")
VERSION_REGEX='[0-9]\.[0-9]\.[0-9]'
BUILD_BEFORE_PACKING=false
SET_CONFIG=false

while test $# -gt 0; do
  case "$1" in
    -h|--help)
      echo_help
      ;;
    -s|--set-config)
      SET_CONFIG=true
      # Run build process to ensure packages are built and copied before setting configs.
      BUILD_BEFORE_PACKING=true
      DEFAULT_PACKAGE_VERSION=${SET_PACKAGE_VERSION}

      shift
      ;;
    -b|--build)
      BUILD_BEFORE_PACKING=true
      shift
      ;;
    *)
    shift
      continue
      ;;
  esac
done

if $SET_CONFIG; then
  say "
  -- Setting EyeGaze Packages.Props Version --
  "
  sed --in-place s_"Version>${VERSION_REGEX}\+"_"Version>${DEFAULT_PACKAGE_VERSION}"_g ${EYEGAZE_PACKAGES_PROPS}
  
  say "Show version now in EYEGAZE packages.props: ${DEFAULT_PACKAGE_VERSION}"
fi

if $BUILD_BEFORE_PACKING; then
  eyegaze || die 1 "Build failed"
fi

say "
-- Copying packages from output directory to local package store --
"

cp -v "${eyegaze_repository_dir}/Source/SensorySoftware.EyeGaze/bin/Debug/SensorySoftware.EyeGaze.${DEFAULT_PACKAGE_VERSION}.nupkg" "${local_package_store}" || die 1 "Cannot copy a package that doesn't exist"
cp -v "${eyegaze_repository_dir}/Source/SensorySoftware.EyeGaze.Desktop/bin/Debug/SensorySoftware.EyeGaze.Desktop.${DEFAULT_PACKAGE_VERSION}.nupkg" "${local_package_store}" || die 1 "Cannot copy a package that doesn't exist"


say "
-- Removing cached packages from global nuget cache --
"

clear-package-cache 'sensorysoftware.eyegaze' 'sensorysoftware.eyegaze.desktop'

if $SET_CONFIG; then
  say "
  -- Setting Grid Directory.Build.Props EyeGazeVersion --
  "
  GRID_DIRECTORY_BUILD_PROPS="${grid_repository_dir}/Source/Directory.Build.props"
  sed --in-place s_"EyeGazeVersion>${VERSION_REGEX}\+"_"EyeGazeVersion>${DEFAULT_PACKAGE_VERSION}"_g ${GRID_DIRECTORY_BUILD_PROPS}
  
  
  say "Show EyeGazeVersion now in GRID Directory.Build.props:"
  grep EyeGazeVersion ${GRID_DIRECTORY_BUILD_PROPS}
fi
