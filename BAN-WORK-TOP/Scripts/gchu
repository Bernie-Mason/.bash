#!/bin/sh

function say() {
	echo "$@" >&2
}

function die() {
	say "$2"
	exit "$1"
}

UNIQUE_ID="$1"
GIT_BRANCH_ACTIONS="--list"
while test $# -gt 0; do
  case "$1" in
    -h|--help)
      echo "Unique checkout for git. First argument should be your unique identifier for the branch in question"
      echo " "
      echo "$gchu identifier [actions]"
      echo " "
      echo "actions:"
      echo "-h, --help          show brief help"
      echo "-a, --all       	select all branches (including remotes)"
      exit 0
      ;;
    -a|--all)
      GIT_BRANCH_ACTIONS="--all"
      shift
      ;;
    *)
	  shift
      continue
      ;;
  esac
done


MATCHING_BRANCH=$(git branch ${GIT_BRANCH_ACTIONS} | grep ${UNIQUE_ID} | sed 's/\*//g' )
BRANCHES=($MATCHING_BRANCH)
MATCHCOUNT="${#BRANCHES[@]}"
echo ""

if (("${MATCHCOUNT}" == 1)); then
	git checkout $MATCHING_BRANCH
	exit
fi

if (("$MATCHCOUNT" > 1)); then
	echo "More than one matching branch. Type the number of the one you wish to checkout:"
	echo "-------------------------------------------------------------------------------"
	echo ""
	i=1
	for BRANCH in ${BRANCHES[@]}; do
		echo "	$i  $BRANCH"
		((++i))
	done
	echo ""
	re='^[0-9]+$'
	read SELECTED_NUMBER
	echo "Value read in: ($SELECTED_BRANCH)"
	if ! [[ $SELECTED_NUMBER =~ $re ]]; then
		die 1 "Not a valid option. Exiting..."
	fi
	SELECTED_BRANCH=${BRANCHES[$((--SELECTED_NUMBER))]}
	echo "You have selected $SELECTED_BRANCH"
	git checkout $SELECTED_BRANCH

	exit
fi

die 1 "No matching branches. Exiting..."



