#!/bin/bash
#
# For dot net framework and x86 builds of speech
#
# Required env variables: 
#   speech_repository_dir - absolute path to directory of the speech repository
#
# Required scripts
#   msbuild32

function say() {
	echo "$@" >&2
}

function title() {
  echo ""
  echo "<--- $1 --->" 
}

function die() {
	test -z "$2" || say "$2"
	exit "$1"
}

function echo_help() {
	echo "Speech build script"
  echo " "
  echo "actions:"
  echo "-c, --clean         clean directory with git clean -fdx -e \"*.vscode\"'"
  echo "-r, --restore       restore nuget packages"
  echo "-b, --build         build with msbuild"
  echo "-d, --debug         run debug build"
  die 0
}

GIT_CLEAN=false
RESTORE=false
BUILD=false
RUN_DEBUG=false

while test $# -gt 0; do
  case "$1" in
  	-h|--help)
      echo_help
      ;;
    -c|--clean)
      GIT_CLEAN=true
      shift
      ;;
    -r|--restore)
      RESTORE=true
      shift
      ;;
    -b|--build)
      BUILD=true
      shift
      ;;
    -cr|-cr)
      GIT_CLEAN=true
      RESTORE=true
      shift
      ;;
    -br|-br)
      RESTORE=true
      BUILD=true
      shift
      ;;
    -bc|-cb)
      GIT_CLEAN=true
      BUILD=true
      shift
      ;;
    -crb|-cbr|-brc|-bcr|-rbc|-rcb)
      GIT_CLEAN=true
      RESTORE=true
      BUILD=true
      shift
      ;;
    *)
	  shift
      continue
      ;;
  esac
done

REPO_DIR=${speech_repository_dir}
SOLUTION_PATH="${REPO_DIR}/Source/SensorySoftware.Speech.sln"

if $GIT_CLEAN; then
	title "Cleaning solution"
	cd "${REPO_DIR}"
	git clean -fxd  || die 1 "== git clean failed =="
	cd -
fi

if $BUILD; then
  title "Building solution"
  dotnet build "${SOLUTION_PATH}" --configuration=Debug --verbosity=quiet || die 1  "== build failed =="
fi