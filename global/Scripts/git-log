#!/bin/bash
# Interactive log tool for displaying commits and history


function say() {
	echo "$@" >&2
}

function die() {
	test -z "$2" || say "$2"
	exit "$1"
}

function echo_help() {
	echo "Log printing tool"
	echo "First argument should be your unique identifier for the branch in question."
	echo "If you provide no argument, it will show the log between your HEAD commit and master"
    echo " "
    echo "\$glogu identifier [actions]"
    echo " "
    echo "actions:"
    echo "-h, --help           show brief help"
    echo "-a, --all            select all branches (including remotes)"
    echo "-r, --remote-master  show log between remote master (e.g. origin/master"
    die 0
}

function echo_options() {
    echo "1: log from specific branch (this will check out the branch in question)"
    echo "2: show commits for a specific file"
    echo "0: exit"
}

echo_options
    
re='^[0-9]+$'
read -p "Enter number {1-2} > "
echo "Value read in: ($SELECTED_OPTION)"
if ! [[ $SELECTED_OPTION =~ $re ]]; then
	die 1 "Not a valid option. Exiting..."
fi

if [[ $SELECTED_OPTION == 1 ]]; then
    echo "Type a pattern for the branch"
    read BRANCH_PATTERN
    gchu $BRANCH_PATTERN
    git log -n 20 --oneline
    git checkout -
elif [[ $SELECTED_OPTION == 2 ]]; then
    echo "Type a pattern for the file"
fi
